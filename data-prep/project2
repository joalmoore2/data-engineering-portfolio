import seaborn as sns
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Load dataset from excel file
df = pd.read_excel(r"C:\Users\joann\Documents\WGU\D599\task2\Health Insurance Dataset.xlsx")

# Display the first few rows
print(df.head())

# Display columns
print(df.columns)

# Display data types
print(df.dtypes)

# Convert 'charges' to numeric (handling errors in case of missing/invalid data)
df["charges"] = pd.to_numeric(df["charges"], errors="coerce")

print(df.dtypes)

# Check for missing values
print(df.isnull().sum())

# Drop rows with missing values in the columns being used to analyze the data
df_cleaned = df.dropna(subset=['bmi', 'charges', 'smoker', 'region', 'age'])

# Get the mean and stadard deviation for the continuous variables being used
print("Mean BMI:", df["bmi"].mean())
print("Standard Deviation of BMI:", df["bmi"].std())

print("Mean Charges:", df["charges"].mean())
print("Standard Deviation of Charges:", df["charges"].std())

# ****UNIVARIATE****

# ***Continuous Variables***
# Bins - Defines the number of bins to use across the histogram.
# KDE - Kernel Density Estimate. A smooth curve representing distribution of data points.
# Variables - BMI and Charges
# BMI Distribution
sns.histplot(df["bmi"], bins=20, kde=True)
plt.title("Distribution of BMI")
plt.show()

# Charges Distribution
sns.histplot(df["charges"], bins=20, kde=True)
plt.title("Distribution of Charges")
plt.show()

# ***Catergorical Variables***
#Variables - Smoker and Region
sns.countplot(x=df["smoker"])
plt.title("Smoker Distribution")
plt.show()

sns.countplot(x=df["region"])
plt.title("Region Distribution")
plt.show()

# ****BIVARIATE****

# ***Continuous Variables***
# Variables - BMI and Charges - Does BMI impact medical bills?
# Scatter plot of BMI vs Charges
sns.scatterplot(x=df["bmi"], y=df["charges"])
plt.title("Scatter Plot of BMI vs Charges")
plt.xlabel("BMI")
plt.ylabel("Charges")
plt.show()

# Measure the strength of the relationship
# If close to 1 - Strong positive correlation
# If close to -1 - Strong negative correlation
# If close to 0 - No relationship
correlation = df["bmi"].corr(df["charges"])
print(f"Correlation between BMI and Charges: {correlation:.2f}")
# Test Result - Correlation = 0.20 meaning the is a weak positive relationship between BMI and Charges.
# BMI MAY impact charges but more variables need to be analyzed to determine what factors play a bigger role.

# ***Catergorical Variables***
# Variables - Age and Smoker 
# Show if smokers tend to be younger or older
sns.boxplot(x=df["smoker"], y=df["age"])
plt.title("Box Plot of Age by Smoker Status")
plt.xlabel("Smoker")
plt.ylabel("Age")
plt.show()
# Test Result - No signifiant difference

# ***PARAMETRIC***
# ***RESEARCH QUESTION***

# Run T-test - Check if there is a significant bmi difference between smokers and non-smokers
# Do smokers have a higher BMI?
# T-statistics measures the difference between the two group means
# P-value shows the probability that any difference is due to random chance
# If p-value < 0.05, the difference in BMI between smokers and non-smokers is statistically significant

from scipy.stats import ttest_ind

# Separate smokers and non-smokers BMI
bmi_smokers = df[df["smoker"] == "yes"]["bmi"]
bmi_non_smokers = df[df["smoker"] == "no"]["bmi"]

# Perform independent t-test
t_stat, p_value = ttest_ind(bmi_smokers, bmi_non_smokers, equal_var=False)
print(f"T-test results for BMI: t-statistic = {t_stat:.2f}, p-value = {p_value:.4f}")

# Show the BMI differences between smokers and non-smokers
sns.boxplot(x=df["smoker"], y=df["bmi"])
plt.title("BMI Distribution by Smoker Status")
plt.xlabel("Smoker")
plt.ylabel("BMI")
plt.show()
# Test Result - t-stat = 0.13 almost no difference between smokers and non-smokers
# Test Result - p-value = 0.8938 is much greater than 0.05, failed to reject null
# Conclusion - Smoking status does not significantly impact BMI in test dataset

# Run correlation for Smokers vs Non-Smokers
from scipy.stats import pearsonr

# Correlation for Smokers
corr_smokers, p_value_smokers = pearsonr(bmi_smokers, df[df["smoker"] == "yes"]["charges"])
print(f"Correlation between BMI and Charges (Smokers): {corr_smokers:.2f}, p-value: {p_value_smokers:.4f}")

# Correlation for Non-Smokers
corr_non_smokers, p_value_non_smokers = pearsonr(bmi_non_smokers, df[df["smoker"] == "no"]["charges"])
print(f"Correlation between BMI and Charges (Non-Smokers): {corr_non_smokers:.2f}, p-value: {p_value_non_smokers:.4f}")

# Scatter plot for smokers vs. non-smokers (BMI vs. Charges)
sns.lmplot(x="bmi", y="charges", hue="smoker", data=df, scatter_kws={"alpha":0.5}, line_kws={"lw":2})
plt.title("BMI vs Charges for Smokers and Non-Smokers")
plt.xlabel("BMI")
plt.ylabel("Charges")
plt.show()
# Test Result - Correlation = 0.81 is very strong and positive. Higher BMI is strongly associated with higher medical charges
# Test Result - p-value = 0.0 is highly significant. Relationship not due to random chance.
# Conclusion - Smokers with a higher BMI tend to have higher medical charges.

# ***NONPARAMETRIC***
# ***RESEARCH QUESTION***

# Run Kruskal-Wallis test - Check if age plays a role in high medical charges amongst the sub-group created
# Do smokers with a high BMI have different medical charges depending on their age?
# Check if there is a significant difference in medical charges between different age groups within the sub-group
# If p < 0.05 there is a significant difference in medical charges between age groups
# If p > or = 0.05 No strong evidence shows that age impacts medical charges among smokers with high bmi

from scipy.stats import kruskal

# Step 1: Filter smokers with a high BMI (BMI â‰¥ 30)
high_bmi_smokers = df[(df["smoker"] == "yes") & (df["bmi"] >= 30)].copy()

# Step 2: Define age groups
bins = [18, 30, 45, 64]  # Age ranges
labels = ["18-30", "31-45", "46-64"]
high_bmi_smokers["age_group"] = pd.cut(high_bmi_smokers["age"], bins=bins, labels=labels, include_lowest=True)

# Step 3: Perform Kruskal-Wallis test on medical charges across age groups
grouped_data = [high_bmi_smokers[high_bmi_smokers["age_group"] == age]["charges"].astype(float) for age in labels]
stat, p = kruskal(*grouped_data)

# Step 4: Print results
print(f"Kruskal-Wallis Test: H-statistic = {stat:.2f}, p-value = {p:.4f}")

# Box plot to show the distribution of charges across age groups
plt.figure(figsize=(8,6))
sns.boxplot(x="age_group", y="charges", data=high_bmi_smokers)
plt.title("Medical Charges by Age Group (High BMI Smokers)")
plt.xlabel("Age Group")
plt.ylabel("Medical Charges")
plt.show()
# Test Result - p-value = 0.0 meaning at least one age group has significantly different medical charges
# Test Result - H-statistic = 82.38 High, strong difference between groups
# Conclusion - Age impacts medical charges for smokers with high BMI
